import matplotlib.pyplot as plt
from sentence_transformers import SentenceTransformer, util
from sklearn.metrics import silhouette_score

# Charger le modèle SentenceTransformer
model = SentenceTransformer('distilbert-base-nli-mean-tokens')

# Vos données d'exemple
sentences = [
    "Première phrase d'exemple",
    "Deuxième phrase d'exemple",
    "Troisième phrase d'exemple",
    # Ajoutez vos phrases d'exemple ici
]

# Transformer les phrases en vecteurs
sentence_embeddings = model.encode(sentences)

# Liste pour stocker les scores de silhouette
silhouette_scores = []

# Nombre maximal de clusters à tester
max_clusters = 10

for num_clusters in range(2, max_clusters+1):
    # Effectuer le clustering avec util.community_detection
    communities = util.community_detection(sentence_embeddings, threshold=0.5, min_community_size=num_clusters)
    
    # Calculer le score de silhouette
    silhouette_avg = silhouette_score(sentence_embeddings, communities)
    silhouette_scores.append(silhouette_avg)

# Tracer le graphique du nombre de clusters par rapport au score de silhouette
plt.plot(range(2, max_clusters+1), silhouette_scores, marker='o')
plt.xlabel('Nombre de clusters')
plt.ylabel('Score de silhouette')
plt.title('Évaluation du clustering avec le score de silhouette')
plt.show()

