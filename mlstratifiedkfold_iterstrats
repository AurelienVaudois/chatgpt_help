import numpy as np
from sklearn.datasets import make_multilabel_classification
from iterstrat.ml_stratifiers import MultilabelStratifiedKFold

# Génération des données multilabels synthétiques
X, y = make_multilabel_classification(
    n_samples=100,  # Nombre total d'exemples
    n_features=10,  # Nombre de caractéristiques par exemple
    n_classes=5,  # Nombre total de labels
    n_labels=2,  # Nombre moyen de labels actifs par exemple
    random_state=42
)

# Définition du nombre de folds pour la validation croisée
num_folds = 5

# Création de l'objet MultilabelStratifiedKFold
mskf = MultilabelStratifiedKFold(n_splits=num_folds, random_state=42)

# Génération des indices des folds pour les ensembles de train et de test
fold_indices = mskf.split(X, y)

# Parcours des folds pour obtenir les ensembles de train et de test
for train_index, test_index in fold_indices:
    X_train, y_train = X[train_index], y[train_index]
    X_test, y_test = X[test_index], y[test_index]

    # Affichage de la distribution des labels dans l'ensemble d'entraînement
    distribution_train = np.mean(y_train, axis=0) * 100
    print("Distribution des labels dans l'ensemble d'entraînement (%):")
    print(distribution_train)

    # Affichage de la distribution des labels dans l'ensemble de test
    distribution_test = np.mean(y_test, axis=0) * 100
    print("Distribution des labels dans l'ensemble de test (%):")
    print(distribution_test)

    print('---')
