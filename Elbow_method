import matplotlib.pyplot as plt
from sentence_transformers import SentenceTransformer, util

# Charger le modèle de SentenceTransformer
model = SentenceTransformer('distilbert-base-nli-mean-tokens')

# Vos données d'exemple
sentences = [
    "Première phrase d'exemple",
    "Deuxième phrase d'exemple",
    "Troisième phrase d'exemple",
    # Ajoutez vos phrases d'exemple ici
]

# Transformer les phrases en vecteurs
sentence_embeddings = model.encode(sentences)

# Liste pour stocker les valeurs de variance expliquée ou de distorsion
variances = []

# Nombre maximal de clusters à tester
max_clusters = 10

for num_clusters in range(1, max_clusters+1):
    # Effectuer le clustering avec util.community_detection
    labels = util.community_detection(sentence_embeddings, threshold=0.5, min_community_size=num_clusters)
    num_labels = len(set(labels))
    
    # Calculer la variance expliquée ou la distorsion
    variance = num_labels
    variances.append(variance)

# Tracer le graphique du nombre de clusters par rapport à la variance expliquée ou à la distorsion
plt.plot(range(1, max_clusters+1), variances, marker='o')
plt.xlabel('Nombre de clusters')
plt.ylabel('Variance expliquée ou distorsion')
plt.title('Méthode du coude')
plt.show()
